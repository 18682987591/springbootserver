server.port=8080

spring.thymeleaf.cache=false
spring.thymeleaf.encoding=utf-8
spring.thymeleaf.servlet.content-type=text/html
spring.thymeleaf.prefix=classpath:/templates
spring.thymeleaf.suffix=.html

spring.user-datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.user-datasource.driver-class-name=org.postgresql.Driver
spring.user-datasource.jdbc-url=jdbc:postgresql://localhost:5432/user
spring.user-datasource.username=postgres
spring.user-datasource.password=19901212
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.user-datasource.initialSize=5
spring.user-datasource.minIdle=5
spring.user-datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.user-datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.user-datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.user-datasource.minEvictableIdleTimeMillis=300000
spring.user-datasource.validationQuery=SELECT 1 FROM DUAL
spring.user-datasource.testWhileIdle=true
spring.user-datasource.testOnBorrow=false
spring.user-datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.user-datasource.poolPreparedStatements=true
spring.user-datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.user-datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.user-datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.user-datasource.useGlobalDataSourceStat=true

spring.blog-datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.blog-datasource.driver-class-name=org.postgresql.Driver
spring.blog-datasource.jdbc-url=jdbc:postgresql://localhost:5432/blog
spring.blog-datasource.username=postgres
spring.blog-datasource.password=19901212
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.blog-datasource.initialSize=5
spring.blog-datasource.minIdle=5
spring.blog-datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.blog-datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.blog-datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.blog-datasource.minEvictableIdleTimeMillis=300000
spring.blog-datasource.validationQuery=SELECT 1 FROM DUAL
spring.blog-datasource.testWhileIdle=true
spring.blog-datasource.testOnBorrow=false
spring.blog-datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.blog-datasource.poolPreparedStatements=true
spring.blog-datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.blog-datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.blog-datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.blog-datasource.useGlobalDataSourceStat=true


# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=localhost
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=0